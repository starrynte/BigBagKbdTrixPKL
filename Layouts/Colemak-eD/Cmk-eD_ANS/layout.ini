;
; Layout definitions
; for Portable Keyboard Layout by Farkas Máté [https://github.com/Portable-Keyboard-Layout]
; edition DreymaR (Øystein B Gadmar, 2015-)   [https://github.com/DreymaR/BigBagKbdTrixPKL]
;
; This is an eD-style layout.ini file
;   - It points to a base layout, Extend and DeadKey table files containing layout parts
;   - This file specifies changes from the base layout, remaps and other layout info
;   - A classic PKL layout.ini file can be reconstructed from these 3 files
;   - If this file uses remaps, those must be redone manually for full reconstruction
;

[information]
layoutname      = Colemak-eD (ANSI)
layoutcode      = Cmk-eD-ANSI
localeid        = 00000409

copyright       = DreymaR (GPL v4)
company         = Shai Coleman, DreymaR
homepage        = http://forum.colemak.com/viewtopic.php?id=1467
version         = 4.0

[eD_info]
;;  This layout augments its base one. The Remap file contains ergo and other layout remaps.
;;  The Extend file holds Extend mappings. The DK list file holds dead key tables.
;baseLayout      = Layouts\Colemak-eD\Cmk-eD_ANS\layout.ini
remapsFile      = PKL_eD\_eD_Remap.ini
extendFile      = PKL_eD\_eD_Extend.ini
dkListFile      = PKL_eD\_eD_DeadKeys.ini

;;  The "layout/soft" ScanCode map is for typing, the "extend/hard" one for Extend mappings.
;;  The "mechanical layout" VirtualKey map is mainly for ANS(I)/ISO/JIS conversion.
;mapSC_layout    = Tarmak_1C_ANS	; Tarmak_#, Tarmak_#C_ANS
;mapSC_layout    = CmkCAW_ANS		; Angle_ANS, AWide_ANS, CmkCAW_ANS etc - see _eD_Remap.ini
;mapSC_extend    = CmkCAW_ANS_Ext
;mapVK_mecSym    = ANS2ISO

;;  DreymaR's Cmk-IBM help images (@96dpi)
img_width       = 812
img_height      = 282
;;  DreymaR's compact help images (3*10 keys)
;img_width       = 292				; Normally 292, ISO-Angle 298
;img_height      =  85
;;  Scaling factor for help images, in %. (96->64)dpi = 66.66%; (96->48)dpi = 50%
img_scale       = 60.0

;;  Background image (key caps etc) and a background color for the image panel
img_bgImage     = PKL_eD\ImgBackground\Bg_ANS_finger-eD-FShui.png
;img_bgImage     = PKL_eD\ImgBackground\Bg_ANS_nice-tinted.png
img_bgColor     = aacccc
;;  On/Off, Extend, Dead key and Shift state marker (e.g., MagBlob, GrnBlob) images
icons_OnOff     = PKL_eD\ImgIcons\Co-5_
img_Extend1     = PKL_eD\ImgExtend\Ext1_ANS.png
img_DKeyDir     = .\DeadkeyImg
img_shftDir     = PKL_eD\ImgModStates\GrnBlob

[global]
;extend_key = CapsLock
shiftstates = 0:1:2:6:7
;;DreymaR's Cmk-IBM images @ 64(60)dpi
;img_width = 541
;img_height = 188

[fingers]
row1 = 1122344567788
row2 = 1123445567888
row3 = 1123445567888
row4 = 12344955678

[layout]
;scan = VK	CapStat	0Norm	1Sh	2Ctrl	6AGr	7AGrSh	Caps	CapsSh
SC029 = OEM_3	0	`	~	--	dk14	≈	; QWERTY `~ - dk_tilde (ANS_3 ISO_5)
SC002 = 1	0	1	!	--	dk01	¡	; QWERTY 1! - dk_dotbelow
SC003 = 2	0	2	@	--	dk02	²	; QWERTY 2@ - dk_hookabove/palatalhook
SC004 = 3	0	3	#	--	dk03	³	; QWERTY 3# - dk_horn/tail/retroflexhook
SC005 = 4	0	4	$	--	dk04	£	; QWERTY 4$ - dk_currency
SC006 = 5	0	5	%	--	dk05	‰	; QWERTY 5% - dk_greek(mu)
SC007 = 6	0	6	^	--	dk06	∂	; QWERTY 6^ - dk_circumflex
SC008 = 7	0	7	&	--	dk07	¬	; QWERTY 7& - dk_caron
SC009 = 8	0	8	*	--	dk08	∞	; QWERTY 8*- dk_ogonek/commabelow
SC00a = 9	0	9	(	--	dk09	·	; QWERTY 9( - dk_breve
SC00b = 0	0	0	)	--	dk10	°	; QWERTY 0) - dk_ringabove/lig
SC00c = OEM_MINUS	0	-	_	--	dk11	±	; QWERTY -_ - dk_macron (ANS_MINUS ISO_PLUS)
SC00d = OEM_PLUS	0	=	+	--	dk12	≠	; QWERTY =+ - dk_dblacute/sci (ANS_PLUS ISO_4)

SC010 = Q	1	q	Q	--	‚	„	; QWERTY qQ
SC011 = W	1	w	W	--	‘	“	; QWERTY wW
SC012 = F	1	f	F	--	’	”	; QWERTY eE
SC013 = P	1	p	P	--	π	¶	; QWERTY rR
SC014 = G	5	g	G	--	ŋ	Ŋ	; QWERTY tT
SC015 = J	5	j	J	--	ʃ	Ʃ	; QWERTY yY
SC016 = L	5	l	L	--	ł	Ł	; QWERTY uU
SC017 = U	1	u	U	--	‹	«	; QWERTY iI
SC018 = Y	1	y	Y	--	›	»	; QWERTY oO
SC019 = OEM_1	0	;	:	--	dk13	…	; QWERTY pP - dk_umlaut (ANS_1 ISO_3)
SC01a = OEM_4	4	[	{	*{Esc}	å	Å	; QWERTY [{ ; Cmk-eD (ANS_4 ISO_6)
SC01b = OEM_6	4	]	}	--	æ	Æ	; QWERTY ]} ; Cmk-eD (ANS_6 ISO_1)

SC01e = A	1	a	A	--	đ	α	; QWERTY aA
SC01f = R	1	r	R	--	®	™	; QWERTY sS
SC020 = S	1	s	S	--	ß	§	; QWERTY dD
SC021 = T	5	t	T	--	þ	Þ	; QWERTY fF
SC022 = D	5	d	D	--	ð	Ð	; QWERTY gG
SC023 = H	5	h	H	--	ħ	Ħ	; QWERTY hH
SC024 = N	1	n	N	--	–	↑	; QWERTY jJ
SC025 = E	1	e	E	--	€	←	; QWERTY kK
SC026 = I	1	i	I	--	—	→	; QWERTY lL
SC027 = O	1	o	O	--	º	ª	; QWERTY ;:
SC028 = OEM_7	0	'	"	--	dk15	′	; QWERTY '"" - dk_acute/superscript (ANS/ISO_7)
SC02b = OEM_5	0	\	|	--	dk16	¦	; QWERTY \| - dk_grave/subscript (ANS_5 ISO_2)

SC056 = OEM_102	5	œ	Œ	--	ø	Ø	; QWERTY OEM_102 (ISO_102)
SC02c = Z	5	z	Z	--	ʒ	Ʒ	; QWERTY zZ
SC02d = X	1	x	X	--	†	‡	; QWERTY xX
SC02e = C	1	c	C	--	©	¢	; QWERTY cC
SC02f = V	1	v	V	--	÷	γ	; QWERTY vV
SC030 = B	1	b	B	--	•	β	; QWERTY bB
SC031 = K	5	k	K	--	ç	Ç	; QWERTY nN
SC032 = M	1	m	M	--	×	↓	; QWERTY mM
SC033 = OEM_COMMA	0	,	<	--	dk17	≤	; QWERTY ,< - dk_cedilla
SC034 = OEM_PERIOD	0	.	>	--	dk18	≥	; QWERTY .> - dk_dotabove
SC035 = OEM_2	0	/	?	--	dk19	¿	; QWERTY /? - dk_stroke/bar (ANS_2 ISO_MINUS)
SC039 = SPACE	0	={space}	={space}	--	 	 	; QWERTY Space
SC053 = DECIMAL	0	.	,	--	--	--	; QWERTY Decimal in Numpad

SC138 = RShift	modifier	; Map RAlt to shift

;CapsLock = OEM_8	0	--	--	*{CapsLock}	*{LWin}	--	; Caps Lock
; *** Using 'CapsLock' as 'extend_key' works best if it is mapped but otherwise disabled
;CapsLock = CAPITAL	0	--	--	--	--	--	; CapsLock
CapsLock = BACK	VirtualKey	; Colemak-style CapsLock -> Backspace
; *** To make a key work with the 'extend_key' modifier, it needs to be VirtualKey-mapped.
; *** When VirtualKey-mapping the Backspace/Enter keys, use their enumerations BACK/RETURN.
; *** Remapping the TAB key is problematic: Alt-Tab becomes 'sticky', needing Esc to get out.
SC001 = ESCAPE	VirtualKey
SC03b = F1	VirtualKey
SC03c = F2	VirtualKey
SC03d = F3	VirtualKey
SC03e = F4	VirtualKey
SC03f = F5	VirtualKey
SC040 = F6	VirtualKey
SC041 = F7	VirtualKey
SC042 = F8	VirtualKey
SC043 = F9	VirtualKey
SC044 = F10	VirtualKey
SC057 = F11	VirtualKey
SC058 = F12	VirtualKey
;SC137 = SNAPSHOT	VirtualKey
;SC054 = SysRq
;SC046 = SCROLL	VirtualKey
; *** On old boards there may not be a Win key. This makes ScrollLock into a Win key.
;SC046 = LWIN	modifier
;SC045 = PAUSE
;SC146 = CtrlBreak
;
;SC152 = INSERT	VirtualKey
;SC153 = DELETE	VirtualKey
;SC147 = HOME	VirtualKey
;SC14f = END	VirtualKey
;SC149 = PRIOR	VirtualKey
;SC151 = NEXT	VirtualKey
; *** Unfortunately, VK-mapped arrow keys didn't work with the (physical) Shift key?!
; *** Seems to work a while, but then it takes BOTH Shift keys to select text?
; *** Tapping RSh while holding LSh works, but not tapping LSh while holding RSh?!
; *** PKL may be sending some strange Shift up stuff that confuses Windows?
;SC14b = LEFT	VirtualKey
;SC148 = UP	VirtualKey
;SC150 = DOWN	VirtualKey
;SC14d = RIGHT	VirtualKey
;
SC00e = BACK	VirtualKey
;SC00f = TAB	VirtualKey
SC01c = RETURN	VirtualKey
;SC039 = SPACE	VirtualKey
;
;SC15d = APPS	VirtualKey
;SC15e = Power
;SC15f = SLEEP	VirtualKey
;SC163 = Wake

[deadKeyNames]
;;  Names listed in this section will override those in the deadkey tables file.
;dk01 = dotbelow
;dk02 = hook-palatal
;dk03 = horn-tail
;dk04 = currency
;dk05 = greek
;dk06 = circumflex
;dk07 = caron
;dk08 = ogonek-cmbel
;dk09 = breve
;dk10 = ringabov-lig
;dk11 = macron
;dk12 = dblacute-sci
;dk13 = umlaut
;dk14 = tilde
;dk15 = acute-sup
;dk16 = grave-sub
;dk17 = cedilla
;dk18 = dotabove
;dk19 = stroke-bar
